# This is a basic workflow to help you get started with Actions

name: DEPLOY_STORED_PROC

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # - name: Install Python packages
      #   run: pip install -r requirements.txt
      
      - uses: Snowflake-Labs/snowflake-cli-action@v1
        with:
          cli-version: "latest"
          default-config-file-path: "config.toml"
          
      # - name: Configure SnowCLI
      #   env:
      #     SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}

      #   run: |
      #     cd $GITHUB_WORKSPACE
      #     echo "[connections]" > connections.toml
      #     echo "[connections.default]" >> connections.toml
      #     echo "account = \"$SNOWFLAKE_ACCOUNT\"" >> connections.toml
      #     chown $USER "/home/runner/work/store_proc_deploy/store_proc_deploy/connections.toml"
      #     chmod 0600 "/home/runner/work/store_proc_deploy/store_proc_deploy/connections.toml"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env: 
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_AUTHENTICATOR: SNOWFLAKE_JWT
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}
 

          # SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: ${{ secrets.SNOWFLAKE_USER }}
          # SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          # SNOWFLAKE_CONNECTIONS_MYCONNECTION_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          # SNOWFLAKE_CONNECTIONS_MYCONNECTION_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          # SNOWFLAKE_ACCOUNT:   ${{ secrets.SNOWFLAKE_ACCOUNT }}
          # SNOWFLAKE_USER:      ${{ secrets.SNOWFLAKE_USER }}
          # SNOWFLAKE_PASSWORD:  ${{ secrets.SNOWFLAKE_PASSWORD }}
          # SNOWFLAKE_ROLE:      ${{ secrets.SNOWFLAKE_ROLE }}
          # SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          # SNOWFLAKE_REGION: ${{ secrets.SNOWFLAKE_REGION }}
          # SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}

        run: |
          # pip install snowflake-cli-labs
          snow --version
          snow connection test -c myconnection
          # snow --config-file $GITHUB_WORKSPACE/connections.toml sql -q "ALTER GIT REPOSITORY GMAHADEVAN_DB.GMAHADEVAN_SCHEMA.GIT_STORED_PROC_REPO FETCH"
          # snow git fetch  GMAHADEVAN_DB.GMAHADEVAN_SCHEMA.GIT_STORED_PROC_REPO --temporary-connection
          # snow snowpark build
          # snow snowpark deploy --replace

          
