# This is a basic workflow to help you get started with Actions

name: DEPLOY_STORED_PROC

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
#   dev_db: GMAHADEVAN_DB
#   dev_schema: GMAHADEVAN_SCHEMA
#   prod_db: PROD_DB  

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Set environment variables based on branch
        id: set-env-vars
        run: |
          if [ "${GITHUB_REF}" == "refs/heads/main" ]; then
          # change the below to prod values. keeping it to dev, to not fail in pr merge to master
            echo "dev_db=GMAHADEVAN_DB" >> $GITHUB_ENV
            echo "dev_schema=GMAHADEVAN_SCHEMA" >> $GITHUB_ENV
            echo "Environment variable prod_db set for main branch."
          else
            echo "dev_db=GMAHADEVAN_DB" >> $GITHUB_ENV
            echo "dev_schema=GMAHADEVAN_SCHEMA" >> $GITHUB_ENV
            echo "Environment variable dev_db, dev_schema set for a feature branches."
          fi

      - name: Install Python packages
        run: pip install -r requirements.txt
      
      - uses: Snowflake-Labs/snowflake-cli-action@v1
        with:
          cli-version: "latest"
          default-config-file-path: "config.toml"

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env: 
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_AUTHENTICATOR: SNOWFLAKE_JWT
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_USER: GITHUB_ACTIONS
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_CONNECTIONS_MYCONNECTION_PRIVATE_KEY_RAW: ${{ secrets.SNOWFLAKE_PRIVATE_KEY_RAW }}

          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}

        run: |
          echo "dev_db is: $dev_db"
          echo "dev_schema is: $dev_schema"
          snow --version

          # option 1
          # snow sql -f $GITHUB_WORKSPACE/sql/DimLoader.sql -D "DB_NAME=$dev_db" -D "SCHEMA_NAME=$dev_schema"
          # snow git fetch GMAHADEVAN_DB.GMAHADEVAN_SCHEMA.GIT_STORED_PROC_REPO
          
          # snow sql -q "ALTER GIT REPOSITORY GMAHADEVAN_DB.GMAHADEVAN_SCHEMA.GIT_STORED_PROC_REPO FETCH"

          # option 2
          python deploy_snowpark_apps.py $GITHUB_WORKSPACE $dev_db $dev_schema
          

          
